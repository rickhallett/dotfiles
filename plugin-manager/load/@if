#!/usr/bin/zsh
#
# This is a conditional executor which takes a few keywords.
# The subsequent command will only be executed if every keyword test passes.
# The format is as follows:
#
# @load if ssh x86_64 then directory python
# @load if ! ssh x86_64 then directory python
# @load if not ssh x86_64 then directory python
#
# This will only run the @load-directory python if accessed over ssh and on a linux machine.
# These are the available tests:
#
#  * ssh - is the current connection remote (over ssh)
#  * linux - is the `uname --machine` x86_64
#  * termux - is the `uname --machine` aarch64
#
# Since the machine architecture is static that is tested once and discarded.
# The ssh connection involves wrapping the commands that would be executed.
#
# The commands to execute will be echoed to stdout.

set -euo pipefail

readonly PLUGIN_FOLDER="${0:A:h:h}"

if [ "${1}" = "!" ] || [ "${1}" = "not" ]; then
    shift
    IS_NOT=1
    is_not_uname() {
        [ "$(uname --machine)" = "${1}" ]
    }
else
    IS_NOT=0
    is_not_uname() {
        [ "$(uname --machine)" != "${1}" ]
    }
fi

IS_SSH=0
for command in "$@"; do
    shift
    case $command in
        ssh)
            IS_SSH=1
            ;;
        linux)
            if is_not_uname "x86_64"; then
                exit
            fi
            ;;
        android)
            if is_not_uname "aarch64"; then
                exit
            fi
            ;;
        then)
            break
            ;;
        *)
            echo "Unknown term: ${command}" >&2
            exit 1
            ;;
    esac
done

if [ ${IS_SSH} -eq 1 ]; then
    if [ ${IS_NOT} -eq 0 ]; then
        echo 'if [ -v SSH_CONNECTION ]; then'
    else
        echo 'if [ ! -v SSH_CONNECTION ]; then'
    fi
fi

readonly COMMAND="${PLUGIN_FOLDER}/load/@${1?provide the command to invoke}"
shift
"${COMMAND}" "$@"

if [ ${IS_SSH} -eq 1 ]; then
    echo 'fi'
fi
